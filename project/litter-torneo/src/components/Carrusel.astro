---
const images = [
  'dragon.jpg', 
  'fifa.webp',
  'lol.jpeg',
  'rocket.jpg'
];
---

<div class="relative mx-auto w-full md:h-auto overflow-hidden">
  <!-- Contenedor de imágenes -->
  <div class="flex transition-transform duration-500 ease-in-out" id="carousel">
    {images.map((image, index) => (
      <div class="flex-shrink-0 w-full carousel-item">
        <img src={image} alt={`Imagen ${index + 1}`} class="w-full h-auto" />
      </div>
    ))}
  </div>
  
  <!-- Botones de navegación -->
  <button id="prevButton" class="top-1/2 left-4 absolute bg-black bg-opacity-50 px-3 pb-[6px] rounded-full text-white transform -translate-y-1/2">
    ‹
  </button>
  <button id="nextButton" class="top-1/2 right-4 absolute bg-black bg-opacity-50 px-3 pb-[6px] rounded-full text-white transform -translate-y-1/2">
    ›
  </button>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const carousel = document.getElementById('carousel');
  const prevButton = document.getElementById('prevButton');
  const nextButton = document.getElementById('nextButton');
  const slides = document.querySelectorAll('.carousel-item');

  let currentIndex = 0;
  let autoPlayInterval: ReturnType<typeof setInterval> | null = null;

  function showSlide(index: number) {
    // Asegurarse de que el índice esté dentro del rango
    currentIndex = (index + slides.length) % slides.length;

    // Mover el carrusel
    if (carousel) {
      carousel.style.transform = `translateX(-${currentIndex * 100}%)`;
    }
  }

  // Evento para botón siguiente
  if (nextButton) {
    nextButton.addEventListener('click', () => {
      // Detener el autoplay cuando se hace clic en el botón
      if (autoPlayInterval) {
        clearInterval(autoPlayInterval);
        autoPlayInterval = null;
      }
      showSlide((currentIndex + 1) % slides.length);
    });
  }

  // Evento para botón anterior
  if (prevButton) {
    prevButton.addEventListener('click', () => {
      // Detener el autoplay cuando se hace clic en el botón
      if (autoPlayInterval) {
        clearInterval(autoPlayInterval);
        autoPlayInterval = null;
      }
      showSlide((currentIndex + slides.length - 1) % slides.length);
    });
  }

  // Función de autoplay
  function autoPlay() {
    autoPlayInterval = setInterval(() => {
      showSlide((currentIndex + 1) % slides.length);
    }, 4000); // Cambia cada 2 segundos
  }

  // Inicializar el carrusel y comenzar el autoplay
  showSlide(0);
  autoPlay();
});
</script>

<style>
  #carousel {
    width: 100%;
    display: flex;
  }

  .carousel-item {
    min-width: 100%;
    transition: transform 0.5s ease-in-out;
  }
</style>